plugins:
  - "@typescript-eslint"

parser: "@typescript-eslint/parser"

extends:
  - eslint:recommended
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:@typescript-eslint/recommended
  # We use the recommended Next.js eslint configuration `next/core-web-vitals` as per
  # <https://nextjs.org/docs/pages/building-your-application/configuring/eslint#core-web-vitals>
  # As of April 2024, the extension simply adds the `@next/next/core-web-vitals` plugin:
  # <https://github.com/vercel/next.js/blob/canary/packages/eslint-config-next/core-web-vitals.js>
  # Which in turn adds the `@next/next` and `@next/next/recommended` rulesets defined in
  # <https://github.com/vercel/next.js/blob/canary/packages/eslint-plugin-next/src/index.ts>
  - next/core-web-vitals

settings:
  react:
    version: "16"

ignorePatterns:
  - public/

rules:
  # The TypeScript compiler is able to handle usage of type definitions before
  # they are defined.
  no-use-before-define: off
  "@typescript-eslint/no-use-before-define": ["error", { "functions": false, "classes": false, "typedefs": false }]

  react/prop-types: off # Remove this override once all props have been typed using PropTypes or TypeScript.
  '@next/next/no-img-element': off # Remove this if we use next.js optimisations for <img>
  '@next/next/no-html-link-for-pages': off

overrides:
  # require() is used for images that are not under static-site/public
  - files:
      - '**.[jt]sx'
    rules:
      '@typescript-eslint/no-var-requires': off

  # React components can use variables before they are defined.
  # This isn't great, as jsx/tsx doesn't imply React usage, but it avoids
  # unnecessary workarounds such as:
  # https://github.com/nextstrain/auspice/commit/af4c742f3855fa90ea292b4882293ebc66ace853
  - files:
      - '**.[jt]sx'
    rules:
      no-use-before-define: off
      "@typescript-eslint/no-use-before-define": ["error", { "functions": false, "classes": false, "variables": false }]

parserOptions:
  sourceType: module
  ecmaVersion: 2022

env:
  browser: true
  es6: true
  node: true
