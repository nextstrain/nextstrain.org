# Prevent parent configuration from being applied.
root: true

plugins:
  - "@typescript-eslint"

parser: "@typescript-eslint/parser"

extends:
  - eslint:recommended
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:@typescript-eslint/strict
  # We use the recommended Next.js eslint configuration `next/core-web-vitals` as per
  # <https://nextjs.org/docs/pages/building-your-application/configuring/eslint#core-web-vitals>
  # As of April 2024, the extension simply adds the `@next/next/core-web-vitals` plugin:
  # <https://github.com/vercel/next.js/blob/canary/packages/eslint-config-next/core-web-vitals.js>
  # Which in turn adds the `@next/next` and `@next/next/recommended` rulesets defined in
  # <https://github.com/vercel/next.js/blob/canary/packages/eslint-plugin-next/src/index.ts>
  - next/core-web-vitals

settings:
  react:
    version: "16"

ignorePatterns:
  - public/

rules:
  "@typescript-eslint/consistent-type-assertions": ["error", { assertionStyle: 'never' }]
  react/prop-types: off # Remove this override once all props have been typed using PropTypes or TypeScript.
  '@next/next/no-img-element': off # Remove this if we use next.js optimisations for <img>
  '@next/next/no-html-link-for-pages': off

overrides:
  # require() is used for images that are not under static-site/public
  - files:
      - '**.[jt]sx'
    rules:
      '@typescript-eslint/no-var-requires': off

parserOptions:
  sourceType: module
  ecmaVersion: 2022

env:
  browser: true
  es6: true
  node: true
